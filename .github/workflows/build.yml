name: Build workflow
on:
  pull_request:
  push:
    branches: [ "master" ]

jobs:
  build:
    name: Build ipa
    runs-on: macos-13

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '15.2'  # Chỉ định phiên bản cụ thể

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true

      - name: Set up CocoaPods
        uses: maxim-lobanov/setup-cocoapods@v1
        with:
          podfile-path: Podfile.lock

      - name: Install dependencies
        run: pod install

      - name: Create xcconfig for build without signing
        run: |
          cat > NoSigning.xcconfig << EOL
          CODE_SIGN_IDENTITY = 
          CODE_SIGNING_REQUIRED = NO
          CODE_SIGNING_ALLOWED = NO
          CODE_SIGN_ENTITLEMENTS = 
          PROVISIONING_PROFILE = 
          EOL
          echo "Created NoSigning.xcconfig"

      - name: Modify project.pbxproj to disable signing
        run: |
          find . -name "project.pbxproj" -exec sed -i '' 's/CODE_SIGN_IDENTITY = ".*"/CODE_SIGN_IDENTITY = ""/' {} \;
          find . -name "project.pbxproj" -exec sed -i '' 's/DEVELOPMENT_TEAM = ".*"/DEVELOPMENT_TEAM = ""/' {} \;
          find . -name "project.pbxproj" -exec sed -i '' 's/PROVISIONING_PROFILE_SPECIFIER = ".*"/PROVISIONING_PROFILE_SPECIFIER = ""/' {} \;
          # Thêm các thiết lập vô hiệu hóa code signing
          find . -name "project.pbxproj" -exec sed -i '' 's/buildSettings = {/buildSettings = {\n\t\t\t\tCODE_SIGNING_REQUIRED = NO;/' {} \;
          find . -name "project.pbxproj" -exec sed -i '' 's/buildSettings = {/buildSettings = {\n\t\t\t\tCODE_SIGNING_ALLOWED = NO;/' {} \;
          echo "Modified project.pbxproj to disable code signing"

      - name: Install bundler
        run: |
          gem install bundler
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Create direct xcodebuild command for tvOS IPA
        run: |
          mkdir -p build
          
          # Archive app
          xcodebuild -workspace Apple-TV-Player.xcworkspace \
                    -scheme Apple-TV-Player \
                    -destination 'generic/platform=tvOS' \
                    -xcconfig NoSigning.xcconfig \
                    -archivePath build/Apple-TV-Player.xcarchive \
                    -allowProvisioningUpdates \
                    CODE_SIGN_IDENTITY="" \
                    CODE_SIGNING_REQUIRED=NO \
                    CODE_SIGNING_ALLOWED=NO \
                    ONLY_ACTIVE_ARCH=NO \
                    clean archive || true
          
          # Tạo export options
          cat > build/ExportOptions.plist << EOL
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>method</key>
              <string>ad-hoc</string>
              <key>compileBitcode</key>
              <false/>
              <key>signingStyle</key>
              <string>manual</string>
          </dict>
          </plist>
          EOL
          
          # Export IPA
          xcodebuild -exportArchive \
                    -archivePath build/Apple-TV-Player.xcarchive \
                    -exportPath build/ \
                    -exportOptionsPlist build/ExportOptions.plist \
                    CODE_SIGN_IDENTITY="" \
                    CODE_SIGNING_REQUIRED=NO \
                    CODE_SIGNING_ALLOWED=NO || true
          
          # Tạo IPA thủ công nếu cần
          if [ ! -f "build/Apple-TV-Player.ipa" ]; then
            echo "Thử tạo IPA thủ công"
            cd build/Apple-TV-Player.xcarchive/Products/Applications/
            mkdir -p Payload
            cp -r *.app Payload/
            zip -r ../../../Apple-TV-Player-unsigned.ipa Payload
            cd -
            ls -la build/
          fi

      - name: Try Fastlane build if direct build fails
        run: |
          if [ ! -f "build/Apple-TV-Player.ipa" ] && [ ! -f "build/Apple-TV-Player-unsigned.ipa" ]; then
            echo "Thử build bằng Fastlane"
            bundle exec fastlane make_ipa
          else
            echo "Đã tạo được IPA, bỏ qua Fastlane"
          fi

      - name: Prepare artifacts
        run: |
          mkdir -p ./artifacts
          
          # Tìm IPA file
          if [ -f "build/Apple-TV-Player.ipa" ]; then
            cp build/Apple-TV-Player.ipa ./artifacts/Apple-TV-Player-unsigned.ipa
          elif [ -f "build/Apple-TV-Player-unsigned.ipa" ]; then
            cp build/Apple-TV-Player-unsigned.ipa ./artifacts/
          elif [ -f "Apple-TV-Player.ipa" ]; then
            cp Apple-TV-Player.ipa ./artifacts/Apple-TV-Player-unsigned.ipa
          else
            echo "KHÔNG TÌM THẤY FILE IPA - BUILD THẤT BẠI"
            find . -name "*.ipa"
            exit 1
          fi
          
          # Tạo README
          cat > ./artifacts/README.md << EOL
          # Apple-TV-Player
          
          Đây là file IPA không ký. Để cài đặt, bạn cần ký lại ứng dụng với certificate của mình.
          
          ## Hướng dẫn cài đặt:
          
          1. Sử dụng Xcode để ký lại ứng dụng với tài khoản Apple Developer của bạn
          2. Hoặc sử dụng công cụ như Sideloadly để cài đặt lên Apple TV
          
          ## Lưu ý:
          
          - Ứng dụng này yêu cầu tvOS 14.0 trở lên
          - Bạn cần có tài khoản Apple Developer để cài đặt
          EOL
          
          echo "Đã chuẩn bị xong artifacts"
          ls -la ./artifacts/

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: apple-tv-player-unsigned
          path: ./artifacts/
          retention-days: 30
